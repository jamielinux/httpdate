name: CI

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

defaults:
  run:
    shell: bash

concurrency:
  group: '${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1


jobs:

  test:
    name: 'Test with python ${{ matrix.python-version }} on ${{ matrix.os }}'
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        # python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
        python-version: ['3.11']
        os: [ubuntu-latest]

    steps:

      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: 'Install python'
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: 'Install hatch'
        run: |
          python -m pip install --upgrade hatch

      - name: 'Run tests'
        run: |
          hatch run +py=${{ matrix.python-version }} ci:cov 'coverage.${{ matrix.os }}.${{ matrix.python-version }}.xml'

      - name: 'Upload coverage data'
        uses: actions/upload-artifact@v3
        with:
          name: covdata
          path: .coverage.*

  coverage:
    name: 'Generate code coverage badge'
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: test

    steps:

      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: 'Install python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 'Install hatch'
        run: |
          python -m pip install --upgrade hatch

      - name: 'Download coverage data'
        uses: actions/download-artifact@v3
        with:
          name: covdata

      - name: 'Combine coverage data'
        run: |
          hatch run +py=3.11 ci:cov
          export TOTAL=$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
          echo "total=$TOTAL" >> $GITHUB_ENV
          echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY

      - name: 'Make coverage badge'
        if: (github.repository == 'jamielinux/httpdate') && (github.ref == 'refs/heads/main')
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_TOKEN }}
          gistID: f3b70fb7174f1a8a87f2185e80cbb2ef
          filename: httpdate.covbadge.json
          label: coverage
          message: ${{ env.total }}%
          minColorRange: 70
          maxColorRange: 90
          valColorRange: ${{ env.total }}
